// <auto-generated />
using System;
using IntegradorApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntegradorApi.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251011175758_ConvertEnumsToEnumDatabase")]
    partial class ConvertEnumsToEnumDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("IntegradorApi.Data.Models.Connection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("url");

                    b.Property<bool>("Delete")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("delete");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("Optional")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("opcional");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("senha");

                    b.Property<string>("TypeConnection")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("conexao");

                    b.Property<string>("TypeDataSource")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fonte");

                    b.Property<string>("TypeIntegration")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("integracao");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("conexoes");
                });

            modelBuilder.Entity("IntegradorApi.Data.Models.Sincronization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConnectionId")
                        .HasColumnType("int")
                        .HasColumnName("id_conexao");

                    b.Property<DateTime>("LastSyncronization")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sincronizacao");

                    b.Property<string>("ResourceIdentifier")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("identificador_recurso");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionId");

                    b.ToTable("sincronizacoes");
                });

            modelBuilder.Entity("IntegradorApi.Data.Models.Sincronization", b =>
                {
                    b.HasOne("IntegradorApi.Data.Models.Connection", "Connection")
                        .WithMany("Sincronizations")
                        .HasForeignKey("ConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Connection");
                });

            modelBuilder.Entity("IntegradorApi.Data.Models.Connection", b =>
                {
                    b.Navigation("Sincronizations");
                });
#pragma warning restore 612, 618
        }
    }
}
